/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view.jframes;

import java.time.LocalDate;
import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;
import java.util.TreeMap;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.SwingWorker;
import agenda.neow.agenda.Agenda;
import persons.Driver;
import view.comboboxModel.GeneralComboboxModel;
import visit.Project;
import visit.Vehicle;
import visit.Visit;
import agenda.neow.agenda.TimeAnswer;
import agenda.neow.util.TimeUtil;
import agenda.neow.agenda.AllocatorConsts;
import control.Controller;
import java.lang.reflect.Array;

/**
 * This is FrameAgenda. He is responsible for the agenda of the officials 
 * who carry out the technical visit;
 * @author Pedro
 */
public class JFrameAgenda extends javax.swing.JFrame {
    //Selected values
    private Vehicle selectedVehicle;
    private Project selectedProject;
    private Map<String, Driver> selectedDrivers;
    private LocalDate dateChoosen;
    private int hours = 0;
    private int minutes = 0;
    
    private LocalDateTime allocatedTo = null;
    private Integer initalBlock = null;
    private Integer blocksQtd = null;
    
    private Controller ctrl;
    
    private boolean projectValid = false;
    private boolean vehicleValid = false;
    private boolean driverValid = false;
    private boolean timeValid = false;
    
    //GeneralComboboxModel
    private GeneralComboboxModel<Vehicle> gcModelVehicle;
    private GeneralComboboxModel<Project> gcModelProject;
    private GeneralComboboxModel<Driver> gcModelDriver;
    
    //List/Map
    private List<Vehicle> lstVehicles;
    private Map<String, Vehicle> mpVehicles;
    private List<Project> lstProjects;
    private Map<String, Project> mpProjects;
    private List<Driver> lstDrivers;
    private Map<String, Driver> mpDrivers;
   
    /**
     * 
     * @param drv a driver
     * @param veh a vehicle
     * @param proj a project
     * @param ctrl a object from class Control
     */
    public JFrameAgenda(Map<String, Driver> drv, Map<String,Vehicle> veh, Map<String,Project> proj, Controller ctrl) {
        this.ctrl = ctrl;

        //Initialize selected
        this.selectedDrivers = new TreeMap<>();

        //Fill local maps
        this.mpVehicles = veh;
        this.mpProjects = proj;
        this.mpDrivers = drv;
        
        //Fill local lists
        this.lstVehicles = new ArrayList<>(veh.values());
        this.lstProjects = new ArrayList<>(proj.values());
        this.lstDrivers = new ArrayList<>(drv.values());
        
        //Generate GeneralComboboxmODEL
        this.gcModelVehicle = new GeneralComboboxModel<>();
        this.gcModelProject = new GeneralComboboxModel<>();
        this.gcModelDriver = new GeneralComboboxModel<>();
        
        //Instatiate general 
        DefaultComboBoxModel dcModelVehicle = gcModelVehicle.getComboBoxModelUsingDescription(lstVehicles);
        DefaultComboBoxModel dcModelProject = gcModelProject.getComboBoxModelUsingDescription(lstProjects);
        DefaultComboBoxModel dcModelDriver = gcModelDriver.getComboBoxModelUsingDescription(lstDrivers);
        
        initComponents();
        
        this.jListVehicles.setModel(dcModelVehicle);
        this.jListProject.setModel(dcModelProject);
        this.jListDrivers.setModel(dcModelDriver);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPabel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jButtonAddProject = new javax.swing.JButton();
        jScrollPane8 = new javax.swing.JScrollPane();
        jListProject = new javax.swing.JList<>();
        jScrollPane6 = new javax.swing.JScrollPane();
        jListDrivers = new javax.swing.JList<>();
        jButtonAddDriver = new javax.swing.JButton();
        jButtonAddVehicle = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        jListVehicles = new javax.swing.JList<>();
        jPanelDateChoose = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jSpinnerHours = new javax.swing.JSpinner();
        jLabel9 = new javax.swing.JLabel();
        jButtonConfirmTime = new javax.swing.JButton();
        jSpinnerMinutes = new javax.swing.JSpinner();
        jLabel14 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jButtonAllocate = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        jLabelAllocatedTo = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabelProject = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jListSelectedDrivers = new javax.swing.JList<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        jListSelectedVehicles = new javax.swing.JList<>();
        jButtonClean = new javax.swing.JButton();
        jButtonValidate = new javax.swing.JButton();
        jLabelDuration = new javax.swing.JLabel();
        jTextFieldVisitDescription = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setText("Selecionar");

        jButtonAddProject.setText(">");
        jButtonAddProject.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddProjectActionPerformed(evt);
            }
        });

        jListProject.setBorder(javax.swing.BorderFactory.createTitledBorder("Projeto"));
        jListProject.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane8.setViewportView(jListProject);

        jListDrivers.setBorder(javax.swing.BorderFactory.createTitledBorder("Funcionários"));
        jListDrivers.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane6.setViewportView(jListDrivers);

        jButtonAddDriver.setText(">");
        jButtonAddDriver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddDriverActionPerformed(evt);
            }
        });

        jButtonAddVehicle.setText(">");
        jButtonAddVehicle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddVehicleActionPerformed(evt);
            }
        });

        jListVehicles.setBorder(javax.swing.BorderFactory.createTitledBorder("Veículo"));
        jListVehicles.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane5.setViewportView(jListVehicles);

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(80, 80, 80)
                .addComponent(jButtonAddProject)
                .addGap(154, 154, 154)
                .addComponent(jButtonAddDriver)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButtonAddVehicle)
                .addGap(85, 85, 85))
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonAddDriver)
                    .addComponent(jButtonAddProject)
                    .addComponent(jButtonAddVehicle))
                .addGap(0, 18, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31))
        );

        jLabel8.setText("Duração de");

        jLabel9.setText("horas");

        jButtonConfirmTime.setText("Confirmar");
        jButtonConfirmTime.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonConfirmTimeActionPerformed(evt);
            }
        });

        jLabel14.setText("minutos");

        javax.swing.GroupLayout jPanelDateChooseLayout = new javax.swing.GroupLayout(jPanelDateChoose);
        jPanelDateChoose.setLayout(jPanelDateChooseLayout);
        jPanelDateChooseLayout.setHorizontalGroup(
            jPanelDateChooseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelDateChooseLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelDateChooseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelDateChooseLayout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jSpinnerHours, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSpinnerMinutes, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel14))
                    .addGroup(jPanelDateChooseLayout.createSequentialGroup()
                        .addGap(173, 173, 173)
                        .addComponent(jButtonConfirmTime)))
                .addContainerGap(96, Short.MAX_VALUE))
        );
        jPanelDateChooseLayout.setVerticalGroup(
            jPanelDateChooseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelDateChooseLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelDateChooseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jSpinnerHours, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(jSpinnerMinutes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButtonConfirmTime)
                .addContainerGap(19, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPabel1Layout = new javax.swing.GroupLayout(jPabel1);
        jPabel1.setLayout(jPabel1Layout);
        jPabel1Layout.setHorizontalGroup(
            jPabel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPabel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1))
            .addGroup(jPabel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPabel1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jPanelDateChoose, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPabel1Layout.setVerticalGroup(
            jPabel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPabel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelDateChoose, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45))
        );

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel2.setText("Criar visita");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel5.setText("Status");

        jButtonAllocate.setText("Alocar");
        jButtonAllocate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAllocateActionPerformed(evt);
            }
        });

        jLabel11.setText("A tarefa pode ser alocada para: ");

        jLabelAllocatedTo.setText("---");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(191, 730, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButtonAllocate)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel11)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabelAllocatedTo)))
                        .addGap(0, 621, Short.MAX_VALUE))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(jLabelAllocatedTo))
                .addGap(25, 25, 25)
                .addComponent(jButtonAllocate)
                .addContainerGap(45, Short.MAX_VALUE))
        );

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel3.setText("Selecionado");

        jLabelProject.setText("Projeto: ");

        jListSelectedDrivers.setBorder(javax.swing.BorderFactory.createTitledBorder("Funcionários"));
        jScrollPane4.setViewportView(jListSelectedDrivers);

        jListSelectedVehicles.setBorder(javax.swing.BorderFactory.createTitledBorder("Veículo"));
        jScrollPane1.setViewportView(jListSelectedVehicles);

        jButtonClean.setText("Limpar");
        jButtonClean.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCleanActionPerformed(evt);
            }
        });

        jButtonValidate.setText("Validar");
        jButtonValidate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonValidateActionPerformed(evt);
            }
        });

        jLabelDuration.setText("Duração:");

        jTextFieldVisitDescription.setBorder(javax.swing.BorderFactory.createTitledBorder("Descrição da visita"));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextFieldVisitDescription)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 222, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabelProject)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jButtonClean)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButtonValidate))
                            .addComponent(jLabelDuration))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(4, 4, 4)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, Short.MAX_VALUE)
                .addComponent(jLabelProject)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelDuration)
                .addGap(23, 23, 23)
                .addComponent(jTextFieldVisitDescription, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonClean)
                    .addComponent(jButtonValidate))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jPabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 651, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(26, 26, 26)
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel2))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 404, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(24, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonAddVehicleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddVehicleActionPerformed
        int index = this.jListVehicles.getSelectedIndex();
        String value = this.jListVehicles.getSelectedValue();
        System.out.println(value);
        System.out.println(index);
        
        if(value == null){
            return;
        }
        
        Vehicle veh = this.mpVehicles.get(value);
        
        System.out.println(veh);
        
        List<Vehicle> lst = new ArrayList<>();
        lst.add(veh);
        
        DefaultComboBoxModel dcModelSelectedVehicle = gcModelVehicle.getComboBoxModelUsingDescription(lst);
        this.jListSelectedVehicles.setModel(dcModelSelectedVehicle);
        this.selectedVehicle = veh;
        this.vehicleValid = true;
    }//GEN-LAST:event_jButtonAddVehicleActionPerformed

    private void jButtonAddDriverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddDriverActionPerformed
        if(this.jListDrivers.getSelectedValue() == null){
            return;
        }
        Driver selectedDrv = this.mpDrivers.get(this.jListDrivers.getSelectedValue());
        System.out.println(selectedDrv);
        this.selectedDrivers.put(selectedDrv.describe(), selectedDrv);     
        this.jListSelectedDrivers.setModel(this.gcModelDriver.getComboBoxModelUsingDescription(new ArrayList<>(selectedDrivers.values())));
        this.lstDrivers.remove(selectedDrv);
        this.jListDrivers.setModel(new GeneralComboboxModel<Driver>().getComboBoxModelUsingDescription(lstDrivers));
        this.driverValid = true;
    }//GEN-LAST:event_jButtonAddDriverActionPerformed

    private void jButtonAddProjectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddProjectActionPerformed
       if(this.jListProject.getSelectedValue() == null){
            return;
        }
        this.selectedProject = this.mpProjects.get(this.jListProject.getSelectedValue());
        this.jLabelProject.setText("Projeto: " + selectedProject.describe());
        this.projectValid = true;
    }//GEN-LAST:event_jButtonAddProjectActionPerformed

    private void jButtonCleanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCleanActionPerformed
        DefaultComboBoxModel emptyVehicle = gcModelVehicle.getComboBoxModelUsingDescription(new ArrayList<>());
        DefaultComboBoxModel emptyDriver = gcModelDriver.getComboBoxModelUsingDescription(new ArrayList<>());
        this.jListSelectedVehicles.setModel(emptyVehicle);
        this.jListSelectedDrivers.setModel(emptyDriver);
        this.jLabelDuration.setText("Duração:");
        this.jLabelProject.setText("Projeto:");
        this.lstDrivers.addAll(this.selectedDrivers.values());
        this.jListDrivers.setModel(gcModelDriver.getComboBoxModelUsingDescription(this.lstDrivers));
        
        this.selectedVehicle = null;
        this.selectedDrivers = null;
        
        this.projectValid = false;
        this.vehicleValid = false;
        this.driverValid = false;
        this.timeValid = false;
    
    }//GEN-LAST:event_jButtonCleanActionPerformed

    private void jButtonValidateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonValidateActionPerformed
        if(!(this.projectValid && this.vehicleValid && this.driverValid && this.timeValid)){
            System.out.println(!this.projectValid && this.vehicleValid && this.driverValid && this.timeValid);
            JOptionPane.showMessageDialog(this.jButtonValidate,"Alguns dados não foram corretamente completados","Dados inconsistentes", JOptionPane.WARNING_MESSAGE);
        }else{
            JOptionPane.showMessageDialog(this.jButtonValidate,
                    "Os dados foram validados.\nBuscando horário de alocação...",
                    "Tentando alocar",
                    JOptionPane.INFORMATION_MESSAGE);
            try{
                FreeTimeSearch t = new FreeTimeSearch(new ArrayList<Driver>(this.selectedDrivers.values()), this.selectedVehicle, hours, minutes);
                t.execute();
            }
            catch(Exception e){
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_jButtonValidateActionPerformed

    private void jButtonConfirmTimeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonConfirmTimeActionPerformed
        String strHours;
        String strMintues ;
        try{
            this.hours = (int) jSpinnerHours.getValue();
            this.minutes = (int) jSpinnerMinutes.getValue();

            if(hours <= 0 && minutes <= 0 && hours <= 12 && minutes <= 59){
                this.hours = 0;
                this.minutes = 0;
                throw new Exception();
            }else{
                strHours = jSpinnerHours.getValue().toString();
                strMintues = jSpinnerMinutes.getValue().toString();
            }

            this.jLabelDuration.setText("Duração: " + strHours + " "+ util.Util.portugueesePlurarize(this.hours, "hora") +" e " + strMintues + " " + util.Util.portugueesePlurarize(this.minutes, "minuto"));
            this.timeValid = true;
            
            
        }catch(Exception e){
            JOptionPane.showMessageDialog(this.jPanelDateChoose,"Algo errado com a data escolhida.","Dados inconsistentes", JOptionPane.WARNING_MESSAGE);
        }
        finally{
        }

    }//GEN-LAST:event_jButtonConfirmTimeActionPerformed

    private void jButtonAllocateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAllocateActionPerformed

        if(this.allocatedTo != null && this.initalBlock != null && blocksQtd != null && selectedDrivers != null && selectedVehicle != null && this.selectedProject != null){
            try{
                LocalDateTime end = TimeUtil.add(this.blocksQtd * AllocatorConsts.MIN_PER_BLOCK, allocatedTo);
                Visit v = new Visit(this.allocatedTo, end, this.jTextFieldVisitDescription.getText(), new ArrayList<Driver>(selectedDrivers.values()), this.selectedProject.getClient(), selectedVehicle);
                //System.out.println(this.selectedProject.getClient().describe());
                this.selectedVehicle.getAgd().allocate(this.blocksQtd, this.initalBlock, v);
                
                this.ctrl.append(v);
                
                for(Driver drv : this.selectedDrivers.values()){
                     this.selectedVehicle.getAgd().allocate(this.blocksQtd, this.initalBlock, v);
                }
                JOptionPane.showMessageDialog(this.jPanelDateChoose,"A tarefa foi alocada.","Sucesso", JOptionPane.INFORMATION_MESSAGE);
            }catch(NullPointerException e){
                e.printStackTrace();
                JOptionPane.showMessageDialog(this.jPanelDateChoose,"A tarefa n  foi alocada.","Sucesso", JOptionPane.INFORMATION_MESSAGE);
        
            }   }else{
            JOptionPane.showMessageDialog(this.jPanelDateChoose,"A tarefa não foi alocada.","Fracasso", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_jButtonAllocateActionPerformed

    private Integer getHoursFromjSpinner(){
        Integer value = (Integer) this.jSpinnerHours.getValue();
        return value <= 0 ? 0 : value;
    }
    
    private void setHoursToJLabel(int hours, int minutes){
        String compl = (hours == 1) ? "":"(s)";
        this.jLabelDuration.setText("Duração: " + hours + " hora"+compl);
    }
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAddDriver;
    private javax.swing.JButton jButtonAddProject;
    private javax.swing.JButton jButtonAddVehicle;
    private javax.swing.JButton jButtonAllocate;
    private javax.swing.JButton jButtonClean;
    private javax.swing.JButton jButtonConfirmTime;
    private javax.swing.JButton jButtonValidate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelAllocatedTo;
    private javax.swing.JLabel jLabelDuration;
    private javax.swing.JLabel jLabelProject;
    private javax.swing.JList<String> jListDrivers;
    private javax.swing.JList<String> jListProject;
    private javax.swing.JList<String> jListSelectedDrivers;
    private javax.swing.JList<String> jListSelectedVehicles;
    private javax.swing.JList<String> jListVehicles;
    private javax.swing.JPanel jPabel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanelDateChoose;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JSpinner jSpinnerHours;
    private javax.swing.JSpinner jSpinnerMinutes;
    private javax.swing.JTextField jTextFieldVisitDescription;
    // End of variables declaration//GEN-END:variables

    private class FreeTimeSearch extends SwingWorker<Void, Void>{
            
        private List<Driver> selectedDrivers;
        private Vehicle selectedVehicle;
        private LocalDate date;
        private int duration;
        public int rsp;
        public LocalDateTime rspldt;

        public FreeTimeSearch(List<Driver> selectedDrivers, Vehicle selectedVehicle, int hours, int minutes) {
            this.selectedDrivers = selectedDrivers;
            this.selectedVehicle = selectedVehicle;
            this.date = date;
            this.duration = duration;
        }
        
        @Override
        protected Void doInBackground() throws Exception {
            //System.out.println("Serarching...");
            
            try{
                List<Agenda> agendas  = new ArrayList<>();
               // System.out.println(selectedVehicle.describe());
                agendas.add(selectedVehicle.getAgd());

                for(Driver drv : selectedDrivers){
                   // System.out.println(drv.describe());
                    agendas.add(drv.getAgd());
                }
                int blocks = TimeUtil.blocksIn(Agenda.MIN_PER_BLOCK, TimeUtil.toMinutes(hours, minutes));

                Agenda sumAgds = Agenda.sum(agendas);
                
                TimeAnswer tma = sumAgds.whenIsAvaliable(blocks);
                
                //System.out.println(TimeUtil.toCompleteString(tma.time));
                jLabelAllocatedTo.setText(TimeUtil.toCompleteString(tma.time));
                allocatedTo = tma.time;
                initalBlock = tma.initialBlock;
                blocksQtd = blocks;
                
            }catch(Exception e){
                e.printStackTrace();
            }
            return null;
        }
    }
    
    private class TimeAllocation extends SwingWorker<Void, Void>{
            
        private List<Driver> selectedDrivers;
        private Vehicle selectedVehicle;
        private LocalDate date;
        private int duration;
        public int rsp;
        public LocalDateTime rspldt;

        public TimeAllocation(List<Driver> selectedDrivers, Vehicle selectedVehicle, int hours, int minutes) {
            this.selectedDrivers = selectedDrivers;
            this.selectedVehicle = selectedVehicle;
            this.duration = duration;
        }
        
        @Override
        protected Void doInBackground() throws Exception {
            
            return null;
        }
        
        @Override
        public void done(){
        }
    }




}
